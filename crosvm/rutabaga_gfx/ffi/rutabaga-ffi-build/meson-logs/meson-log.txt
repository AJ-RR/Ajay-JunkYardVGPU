Build started at 2025-05-08T14:34:19.293017
Main binary: /data/data/com.termux/files/usr/bin/python3.12
Build Options: -Dincludedir=/data/data/com.termux/files/usr/include -Dlibdir=/data/data/com.termux/files/usr/lib -Dincludedir=/data/data/com.termux/files/usr/include -Dlibdir=/data/data/com.termux/files/usr/lib
Python system: Linux
The Meson build system
Version: 1.8.0
Source dir: /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi
Build dir: /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build
Build type: native build
Project name: rutabaga_gfx_ffi
Project version: 0.1.6
-----------
Detecting compiler via: `cc --version` -> 0
stdout:
clang version 20.1.3
Target: aarch64-unknown-linux-android24
Thread model: posix
InstalledDir: /data/data/com.termux/files/usr/bin
-----------
Running command: -x c -E -dM -
-----
-----------
Detecting linker via: `cc -Wl,--version` -> 0
stdout:
LLD 20.1.3 (compatible with GNU linkers)
-----------
-----------
Detecting LLD linker via: `cc -Wl,-v` -> 1
stdout:
LLD 20.1.3 (compatible with GNU linkers)
-----------
stderr:
ld.lld: error: undefined symbol: main
>>> referenced by crtbegin.c
>>>               /data/data/com.termux/files/usr/lib/crtbegin_dynamic.o:(_start_main)
>>> referenced by crtbegin.c
>>>               /data/data/com.termux/files/usr/lib/crtbegin_dynamic.o:(_start_main)
cc: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
Sanity testing C compiler: cc
Is cross compiler: False.
Sanity check compiler command line: cc sanitycheckc.c -o sanitycheckc.exe -D_FILE_OFFSET_BITS=64
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
Running test binary command:  /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/sanitycheckc.exe
C compiler for the host machine: cc (clang 20.1.3 "clang version 20.1.3")
C linker for the host machine: cc ld.lld 20.1.3
-----------
Detecting archiver via: `llvm-ar-20 --version` -> [Errno 2] No such file or directory: 'llvm-ar-20'
-----------
Detecting archiver via: `llvm-ar --version` -> 0
stdout:
LLVM (http://llvm.org/):
  LLVM version 20.1.3
  Optimized build.
-----------
-----------
Detecting compiler via: `cc --version` -> 0
stdout:
clang version 20.1.3
Target: aarch64-unknown-linux-android24
Thread model: posix
InstalledDir: /data/data/com.termux/files/usr/bin
-----------
Running command: -x c -E -dM -
-----
-----------
Detecting linker via: `cc -Wl,--version` -> 0
stdout:
LLD 20.1.3 (compatible with GNU linkers)
-----------
-----------
Detecting LLD linker via: `cc -Wl,-v` -> 1
stdout:
LLD 20.1.3 (compatible with GNU linkers)
-----------
stderr:
ld.lld: error: undefined symbol: main
>>> referenced by crtbegin.c
>>>               /data/data/com.termux/files/usr/lib/crtbegin_dynamic.o:(_start_main)
>>> referenced by crtbegin.c
>>>               /data/data/com.termux/files/usr/lib/crtbegin_dynamic.o:(_start_main)
cc: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
-----------
Detecting compiler via: `rustc --version` -> 0
stdout:
rustc 1.86.0 (05f9846f8 2025-03-31) (built from a source tarball)
-----------
-----------
Called: `rustc -C linker=cc -o /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/rusttest.exe /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/sanity.rs` -> 0
-----------
Called: `rustc -C linker=cc --crate-type staticlib --print native-static-libs /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/sanity.rs` -> 0
stderr:
warning: function `main` is never used
 --> /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/sanity.rs:1:4
  |
1 | fn main() {
  |    ^^^^
  |
  = note: `#[warn(dead_code)]` on by default

note: Link against the following native artifacts when linking against this static library. The order and any duplication can be significant on some platforms.

note: native-static-libs: -ldl -llog -lunwind -ldl -lm -lc

warning: 1 warning emitted
-----------
Rust compiler for the host machine: rustc -C linker=cc (rustc 1.86.0 "1.86.0")
Rust linker for the host machine: rustc -C linker=cc ld.lld 20.1.3
-----------
Detecting compiler via: `cc --version` -> 0
stdout:
clang version 20.1.3
Target: aarch64-unknown-linux-android24
Thread model: posix
InstalledDir: /data/data/com.termux/files/usr/bin
-----------
Running command: -x c -E -dM -
-----
-----------
Detecting linker via: `cc -Wl,--version` -> 0
stdout:
LLD 20.1.3 (compatible with GNU linkers)
-----------
-----------
Detecting LLD linker via: `cc -Wl,-v` -> 1
stdout:
LLD 20.1.3 (compatible with GNU linkers)
-----------
stderr:
ld.lld: error: undefined symbol: main
>>> referenced by crtbegin.c
>>>               /data/data/com.termux/files/usr/lib/crtbegin_dynamic.o:(_start_main)
>>> referenced by crtbegin.c
>>>               /data/data/com.termux/files/usr/lib/crtbegin_dynamic.o:(_start_main)
cc: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
Sanity testing C compiler: cc
Is cross compiler: False.
Sanity check compiler command line: cc sanitycheckc.c -o sanitycheckc.exe -D_FILE_OFFSET_BITS=64
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
Running test binary command:  /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/sanitycheckc.exe
C compiler for the build machine: cc (clang 20.1.3 "clang version 20.1.3")
C linker for the build machine: cc ld.lld 20.1.3
-----------
Detecting archiver via: `llvm-ar-20 --version` -> [Errno 2] No such file or directory: 'llvm-ar-20'
-----------
Detecting archiver via: `llvm-ar --version` -> 0
stdout:
LLVM (http://llvm.org/):
  LLVM version 20.1.3
  Optimized build.
-----------
-----------
Detecting compiler via: `cc --version` -> 0
stdout:
clang version 20.1.3
Target: aarch64-unknown-linux-android24
Thread model: posix
InstalledDir: /data/data/com.termux/files/usr/bin
-----------
Running command: -x c -E -dM -
-----
-----------
Detecting linker via: `cc -Wl,--version` -> 0
stdout:
LLD 20.1.3 (compatible with GNU linkers)
-----------
-----------
Detecting LLD linker via: `cc -Wl,-v` -> 1
stdout:
LLD 20.1.3 (compatible with GNU linkers)
-----------
stderr:
ld.lld: error: undefined symbol: main
>>> referenced by crtbegin.c
>>>               /data/data/com.termux/files/usr/lib/crtbegin_dynamic.o:(_start_main)
>>> referenced by crtbegin.c
>>>               /data/data/com.termux/files/usr/lib/crtbegin_dynamic.o:(_start_main)
cc: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
-----------
Detecting compiler via: `rustc --version` -> 0
stdout:
rustc 1.86.0 (05f9846f8 2025-03-31) (built from a source tarball)
-----------
-----------
Called: `rustc -C linker=cc -o /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/rusttest.exe /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/sanity.rs` -> 0
-----------
Called: `rustc -C linker=cc --crate-type staticlib --print native-static-libs /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/sanity.rs` -> 0
stderr:
warning: function `main` is never used
 --> /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/rutabaga-ffi-build/meson-private/sanity.rs:1:4
  |
1 | fn main() {
  |    ^^^^
  |
  = note: `#[warn(dead_code)]` on by default

note: Link against the following native artifacts when linking against this static library. The order and any duplication can be significant on some platforms.

note: native-static-libs: -ldl -llog -lunwind -ldl -lm -lc

warning: 1 warning emitted
-----------
Rust compiler for the build machine: rustc -C linker=cc (rustc 1.86.0 "1.86.0")
Rust linker for the build machine: rustc -C linker=cc ld.lld 20.1.3
Build machine cpu family: aarch64
Build machine cpu: aarch64
Host machine cpu family: aarch64
Host machine cpu: aarch64
Target machine cpu family: aarch64
Target machine cpu: aarch64
Program build.sh found: YES (/bin/bash /data/data/com.termux/files/home/crosvm/rutabaga_gfx/ffi/build.sh)
Pkg-config binary missing from cross or native file, or env var undefined.
Trying a default Pkg-config fallback at pkg-config
Found pkg-config: YES (/data/data/com.termux/files/usr/bin/pkg-config) 0.29.2
Build targets in project: 1

rutabaga_gfx_ffi 0.1.6

  User defined options
    includedir: /data/data/com.termux/files/usr/include
    libdir    : /data/data/com.termux/files/usr/lib

Found ninja-1.12.1 at /data/data/com.termux/files/usr/bin/ninja
Failed to guess install tag for /data/data/com.termux/files/usr/lib/librutabaga_gfx_ffi.so.0
Failed to guess install tag for /data/data/com.termux/files/usr/lib/librutabaga_gfx_ffi.so.0.1.6
Failed to guess install tag for /data/data/com.termux/files/usr/lib/librutabaga_gfx_ffi.so.0
Failed to guess install tag for /data/data/com.termux/files/usr/lib/librutabaga_gfx_ffi.so.0.1.6
